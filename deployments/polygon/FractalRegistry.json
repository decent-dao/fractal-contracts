{
  "address": "0x0B42791C436B91ACD668Ee630650C666ec29237b",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "daoAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "daoName",
          "type": "string"
        }
      ],
      "name": "FractalNameUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "parentDAOAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "subDAOAddress",
          "type": "address"
        }
      ],
      "name": "FractalSubDAODeclared",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_subDAOAddress",
          "type": "address"
        }
      ],
      "name": "declareSubDAO",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "updateDAOName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9dc268a764e1962d0c825f3e21919d0b5ba7475db06d3e73808080f59cb9b2aa",
  "receipt": {
    "to": null,
    "from": "0x6bd62FeB486Bf699Ac04eD6DC09dE36D11720509",
    "contractAddress": "0x0B42791C436B91ACD668Ee630650C666ec29237b",
    "transactionIndex": 88,
    "gasUsed": "184963",
    "logsBloom": "0x
    "blockHash": "0xbdb12d956133b4eec2f7acb4da7f08e8d0da106f29eb36e0544017e9c0da9213",
    "transactionHash": "0x9dc268a764e1962d0c825f3e21919d0b5ba7475db06d3e73808080f59cb9b2aa",
    "logs": [
      {
        "transactionIndex": 88,
        "blockNumber": 38515037,
        "transactionHash": "0x9dc268a764e1962d0c825f3e21919d0b5ba7475db06d3e73808080f59cb9b2aa",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x0000000000000000000000006bd62feb486bf699ac04ed6dc09de36d11720509",
          "0x0000000000000000000000007c7379531b2aee82e4ca06d4175d13b9cbeafd49"
        ],
        "data": "0x000000000000000000000000000000000000000000000000000874ee31eb44c40000000000000000000000000000000000000000000000001b7afafff0cb3bd100000000000000000000000000000000000000000001d01e1ccc7fd321980d6e0000000000000000000000000000000000000000000000001b728611bedff70d00000000000000000000000000000000000000000001d01e1cd4f4c153835232",
        "logIndex": 320,
        "blockHash": "0xbdb12d956133b4eec2f7acb4da7f08e8d0da106f29eb36e0544017e9c0da9213"
      }
    ],
    "blockNumber": 38515037,
    "cumulativeGasUsed": "13823182",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "71d3440679bfd5caf66015486f81559e",
  "metadata": "{\"compiler\":{\"version\":\"0.8.13+commit.abaa5c0e\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"daoAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"daoName\",\"type\":\"string\"}],\"name\":\"FractalNameUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"parentDAOAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"subDAOAddress\",\"type\":\"address\"}],\"name\":\"FractalSubDAODeclared\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_subDAOAddress\",\"type\":\"address\"}],\"name\":\"declareSubDAO\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"updateDAOName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"declareSubDAO(address)\":{\"params\":{\"_subDAOAddress\":\"Address of subDAO to declare as child of parentDAO.\"}},\"updateDAOName(string)\":{\"params\":{\"_name\":\"The new DAO name. \"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"declareSubDAO(address)\":{\"notice\":\"Declares certain address as subDAO of parentDAO.\"},\"updateDAOName(string)\":{\"notice\":\"Updates the DAO's registered name. It's not unique so shouldn't be used for differentiating DAOs anyhow\"}},\"notice\":\"An utility contract for settling DAO's name and declaring parent->child relationships.Might be extended in future to handle more Fractal-specific utility stuffThe name of the DAO and child->parent relationships are not stored and not verified anyhow.So those events should be used only for visual representation and not actual business logic.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FractalRegistry.sol\":\"FractalRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/FractalRegistry.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./interfaces/IFractalRegistry.sol\\\";\\r\\n\\r\\n/// @notice An utility contract for settling DAO's name and declaring parent->child relationships.\\r\\n/// @notice Might be extended in future to handle more Fractal-specific utility stuff\\r\\n/// @notice The name of the DAO and child->parent relationships are not stored and not verified anyhow.\\r\\n/// @notice So those events should be used only for visual representation and not actual business logic.\\r\\ncontract FractalRegistry is IFractalRegistry {\\r\\n    /// @notice Updates the DAO's registered name. It's not unique so shouldn't be used for differentiating DAOs anyhow\\r\\n    /// @param _name The new DAO name. \\r\\n    function updateDAOName(string memory _name) external {\\r\\n        emit FractalNameUpdated(msg.sender, _name);\\r\\n    }\\r\\n\\r\\n    /// @notice Declares certain address as subDAO of parentDAO.\\r\\n    /// @param _subDAOAddress Address of subDAO to declare as child of parentDAO.\\r\\n    function declareSubDAO(address _subDAOAddress) external {\\r\\n        emit FractalSubDAODeclared(msg.sender, _subDAOAddress);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x1dbb48e334749b05027cef207a957e2b94b7d098811ee589e68df438d70d2a65\",\"license\":\"MIT\"},\"contracts/interfaces/IFractalRegistry.sol\":{\"content\":\"//SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface IFractalRegistry {\\r\\n    event FractalNameUpdated(address indexed daoAddress, string daoName);\\r\\n    event FractalSubDAODeclared(address indexed parentDAOAddress, address indexed subDAOAddress);\\r\\n\\r\\n    /// @notice Updates the DAO's registered name\\r\\n    /// @param _name The new DAO name\\r\\n    function updateDAOName(string memory _name) external;\\r\\n\\r\\n    /// @notice Declares certain address as subDAO of parentDAO.\\r\\n    /// @param _subDAOAddress Address of subDAO to declare as child of parentDAO.\\r\\n    function declareSubDAO(address _subDAOAddress) external;\\r\\n}\\r\\n\",\"keccak256\":\"0x5012213ed494cdb17f38a1824d28339cdedd0ce91e116936bfb9e8c8f593e919\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50610262806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063ad25ee4a1461003b578063b7d0e69114610050575b600080fd5b61004e6100493660046100f6565b610063565b005b61004e61005e3660046101a7565b6100a7565b336001600160a01b03167f3c7e9162ed121fd2c775c8c39886daeaede693a6e24ac0fa81e50c47833a9e088260405161009c91906101d7565b60405180910390a250565b6040516001600160a01b0382169033907f099c708754e573857f5a1999a474653fd72d617a0619e740e41bd3b882b64bb890600090a350565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561010857600080fd5b813567ffffffffffffffff8082111561012057600080fd5b818401915084601f83011261013457600080fd5b813581811115610146576101466100e0565b604051601f8201601f19908116603f0116810190838211818310171561016e5761016e6100e0565b8160405282815287602084870101111561018757600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156101b957600080fd5b81356001600160a01b03811681146101d057600080fd5b9392505050565b600060208083528351808285015260005b81811015610204578581018301518582016040015282016101e8565b81811115610216576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122047823afe239ea56e6cf480bea62cce4cf30fdbcde98f979b9a187c9c7c2e465864736f6c634300080d0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063ad25ee4a1461003b578063b7d0e69114610050575b600080fd5b61004e6100493660046100f6565b610063565b005b61004e61005e3660046101a7565b6100a7565b336001600160a01b03167f3c7e9162ed121fd2c775c8c39886daeaede693a6e24ac0fa81e50c47833a9e088260405161009c91906101d7565b60405180910390a250565b6040516001600160a01b0382169033907f099c708754e573857f5a1999a474653fd72d617a0619e740e41bd3b882b64bb890600090a350565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561010857600080fd5b813567ffffffffffffffff8082111561012057600080fd5b818401915084601f83011261013457600080fd5b813581811115610146576101466100e0565b604051601f8201601f19908116603f0116810190838211818310171561016e5761016e6100e0565b8160405282815287602084870101111561018757600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156101b957600080fd5b81356001600160a01b03811681146101d057600080fd5b9392505050565b600060208083528351808285015260005b81811015610204578581018301518582016040015282016101e8565b81811115610216576000604083870101525b50601f01601f191692909201604001939250505056fea264697066735822122047823afe239ea56e6cf480bea62cce4cf30fdbcde98f979b9a187c9c7c2e465864736f6c634300080d0033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "declareSubDAO(address)": {
        "params": {
          "_subDAOAddress": "Address of subDAO to declare as child of parentDAO."
        }
      },
      "updateDAOName(string)": {
        "params": {
          "_name": "The new DAO name. "
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "declareSubDAO(address)": {
        "notice": "Declares certain address as subDAO of parentDAO."
      },
      "updateDAOName(string)": {
        "notice": "Updates the DAO's registered name. It's not unique so shouldn't be used for differentiating DAOs anyhow"
      }
    },
    "notice": "An utility contract for settling DAO's name and declaring parent->child relationships.Might be extended in future to handle more Fractal-specific utility stuffThe name of the DAO and child->parent relationships are not stored and not verified anyhow.So those events should be used only for visual representation and not actual business logic.",
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": null
  }
}